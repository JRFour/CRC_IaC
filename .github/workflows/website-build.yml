name: "Website Deployment"

on:
  push:
    branches:
      - main

jobs:
  sonarcloud_sast:
    name: "SonarCloud SAST Scan"
    runs-on: self-hosted
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-node@v3
      with:
        node-version: 16
        cache: npm
    - run: npm install
    - name: SonarCloud Scan
      uses: sonarsource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      with:
        args: >
          -Dsonar.organization=jrfour-cloudrc
          -Dsonar.projectKey=jrfour-cloudrc_challenge
          
  # Runs Snyk for SCA (Software Composition Analysis) in IaC
  snyk_sca:
    name: "Snyk SCA Scan"
    runs-on: [self-hosted]
    steps:
      - uses: actions/checkout@v4
      - name: Run Snyk to check manifest file for issues
        uses: snyk/actions/iac@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
          
  # Runs Terraform to build out AWS infrastructure and DNS rules
  terraform_build:
    name: "Terraform AWS Build"
    runs-on: self-hosted
    needs: snyk_sca
    permissions:
      contents: read
      pull-requests: write
    steps:
      - name: "Checkout"
        uses: actions/checkout@v4

      - name: "Setup Terraform"
        uses: hashicorp/setup-terraform@v3

      - name: "Terraform Init"
        run: terraform init

      - name: "Terraform Plan"
        run: terraform plan -no-color
        continue-on-error: true

      - name: "Terraform Apply"
        run:  terraform apply -auto-approve

  # Pushes files in 'website' folder to S3 bucket
  deploy:
    name: "Push to AWS S3"
    runs-on: self-hosted
    needs: [terraform_build, sonarcloud_sast]
    steps:
      - name: "Checkout"
        uses: actions/checkout@v4
      - name: "Setup AWS CLI"
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY_ID }}
          aws-region: us-east-1
      - name: "Sync files to S3 bucket"
        run: |
          aws s3 sync website/ s3://static.realewanderer.net --delete

  # Runs OWASP ZAP Scan for web vulnerabilities
  zap_scan:
    runs-on: ubuntu-latest
    needs: deploy
    name: Run DAST scan on the web application
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: master
      - name: ZAP Scan
        uses: zaproxy/action-baseline@v0.12.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          docker_name: 'ghcr.io/zaproxy/zaproxy:stable'
          target: 'https://static.realewanderer.net/'
          rules_file_name: '.zap/rules.tsv'
          cmd_options: '-a'
